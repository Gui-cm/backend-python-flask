pipeline {
    agent {
      node {
        label 'Node-01'
      }
    }
    environment {
        AWS_REGION="us-east-1" 
        IMAGE_REPO_NAME="houpa-qa"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
        PROFILE_AWS_CLI="darede"
        AWS_ECS_SERVICE = "ecs-service-houpa"
        AWS_ECS_TASK_DEFINITION = "houpa-app"
        AWS_ECS_CLUSTER = "cluster-houpa"
        AWS_ECS_TASK_DEFINITION_PATH = "file:///home/ec2-user/taskdefinition.json"
    }
    stages {

        stage('Escolhendo Ambiente') {
            steps {
              script {
                env.AMBIENTE = input message: 'Escolha o Ambiente para deploy:', ok: 'OK',
                  parameters: [
                    choice(name: 'AMBIENTE', choices:['PROD','HML','DEV'], description: 'Escolha o Ambiente para deploy:')
                  ]
                if (env.AMBIENTE == 'PROD') { env.AWS_ACCOUNT_ID='123456789123-prd'}
                if (env.AMBIENTE == 'HML') { env.AWS_ACCOUNT_ID='123456789123-hml'}
                if (env.AMBIENTE == 'DEV') { env.AWS_ACCOUNT_ID='123456789123-dev'}
              }
              echo "O ambiente escolhido foi ${env.AMBIENTE} e o deploy sera na conta: ${env.AWS_ACCOUNT_ID}"
              echo "debug msg: primeira env aws ${AWS_ACCOUNT_ID}, segunda env ${env.AWS_ACCOUNT_ID}"
            }
        }

        stage('Terraform Plan') {
          steps {
            dir("Dir-do-tf") {
              //sh ('terraform plan -f arquivo.tf')
              sh ('cat arquivo.tf')
              echo "TF Plan Executado"
            }
          }
        }

        stage('Aprovando Terraform Apply') {
          steps {
            timeout(time: 2, unit: 'DAYS') {
              input message: "Deseja realizar o Terraform Apply no ambiente ${env.AMBIENTE} e conta ${env.AWS_ACCOUNT_ID}?",
              submitter: 'admin'
            }
          }
        }
          
        stage('Terraform Apply') {
          steps {
            dir("Dir-do-tf") {
              //sh ('terraform apply -f arquivo.tf')
              sh ('cat arquivo.tf')
              echo "TF Apply Executado"
            }
          }
        }

    }
}